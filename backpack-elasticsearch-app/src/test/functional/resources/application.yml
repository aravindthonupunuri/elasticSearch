micronaut:
  application:
    name: backpack-elasticsearch-app
  server:
    port: ${server-port:32000}
  http:
    client:
      read-timeout: 20s
    services:
      carts-api:
        urls:
          - http://localhost:${server-port:32000}
        pool:
          enabled: false
      permissions-api:
        urls:
          - http://localhost:${server-port:32000}
        pool:
          enabled: false
  metrics:
    binders:
      web:
        enabled: false # we are using our own binder via our custom micronaut-metrics lib

elasticsearch:
  index: backpackregistry
  operation-timeout: 500ms # seconds, default: 1s
  httpHosts: "http://localhost:9200,http://127.0.0.2:9200" # same as esaas.primary.httpHosts
  request:
    default:
      connection-request-timeout: 200   # millis, default: 1s
      connect-timeout: 10000            # millis, default: 30s

esaas:
  nuidUser: user
  nuidPassword: password
  use-fallback: true
  primary:
    httpHosts: "http://localhost:9200,http://127.0.0.2:9200"
  backup:
    httpHosts: "http://localhost:9200,http://127.0.0.2:9200"
  health:
    enabled: true # enable custom health indicator with two elastic clients

jackson:
  property-naming-strategy: "SNAKE_CASE"

cart:
  client:
    refresh-cycle-sec: 999999999
    fastly-header-name: cartslb
    gcp-lb-header: eggo_grapenuts

api:
  oauth:
    filter-path: /**
    url: http://localhost:${server-port:32000}/testserver
    client-id: "test_ropc"
    client-secret: "test"
    nuid-username: "testsecret"
    nuid-password: "MLRw04}testpwd"

endpoints:
  prometheus:
    sensitive: false
  health:
    elasticsearch:
      rest.high.level.enabled: false # disable default elastic health indicator and use custom indicator instead

filter:
  server:
    order:
      mdc-filter: 50
      lists-brave-tracing-server-filter: 100
      list-authorization-filter: 200
      sanitizing-filter: 300
  client:
    order:
      lists-brave-tracing-client-filter: 900
      metrics-filter: 850
      resilience-client-filter: 800
      oauth-filter: 701
      oauth-key-filter: 700

logging:
  mdc:
    enabled: true
    keys:
      - profile_id
      - x-api-id
    filter:
      path: /registry/**

mockfilter:
  paths: /zipkin,/testserver/auth/oauth/v2/token,/

resilience4j:
  filter: false
  circuitbreaker:
    failure-rate-threshold: 50            # failure rate threshold in percentage (default: 50)
    wait-duration-secs-in-open-state: 1  # time cb waits before transitioning from open to half-open (default: 60s)
    sliding-window-type: TIME_BASED       # possible values TIME_BASED or COUNT_BASED (default: COUNT_BASED)
    sliding-window-size: 5               # seconds for TIME_BASED, request-count for COUNT_BASED (default: 100)
    minimum-number-of-calls: 2            # min calls required (per sliding window period) before cb calculates error rate (default: 10)
    permitted-number-of-calls-in-half-open-state: 1 # Number of permitted calls when the CircuitBreaker is half open.

backends:
  primary:
    circuit-breaker:
      enabled: true
      failure-rate-threshold: 50            # failure rate threshold in percentage
      wait-duration-secs-in-open-state: 1   # time cb waits before transitioning from open to half-open
      sliding-window-type: TIME_BASED       # possible values TIME_BASED or COUNT_BASED
      sliding-window-size: 5                # seconds for TIME_BASED, request-count for COUNT_BASED
      minimum-number-of-calls: 2            # min calls required (per sliding window period) before cb calculates error rate.
  backup:
    circuit-breaker:
      enabled: true
      failure-rate-threshold: 50            # failure rate threshold in percentage
      wait-duration-secs-in-open-state: 1   # time cb waits before transitioning from open to half-open
      sliding-window-type: TIME_BASED       # possible values TIME_BASED or COUNT_BASED
      sliding-window-size: 5                # seconds for TIME_BASED, request-count for COUNT_BASED
      minimum-number-of-calls: 2            # min calls required (per sliding window period) before cb calculates error rate.

tracing:
  zipkin:
    enabled: true
    excluded-paths: /health
    http:
      url: http://localhost:${server-port:32000}/zipkin

api-key: "testkey"

components:
  server:
    list-authorization-filter:
      base-uri: /registries_search/v1

kafka:
  embedded:
    enabled: false
  consumers:
    lists-msg-bus-apiapp-consumer:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    lists-dlq-apiapp-consumer:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
  producers:
    # default is a Jackson based JSON serializer for key/value
    lists-msg-bus-producer:
      retries: 3
      retry:
        backoff:
          ms: 1_000
      max:
        in:
          flight:
            requests:
              per:
                connection: 1
        block:
          ms: 2_000

msgbus:
  source: backpack-elasticsearch
  kafka:
    consumer:
      enabled: false
    producer:
      enabled: true
    dlqconsumer:
      enabled: false
    dlqproducer:
      enabled: true
    topic: lists-msg-bus
    consumer-group: lists-msg-bus-apiapp-consumer
    consumer-batch-size: 10
    dlq-topic: lists-dlq
    dlq-consumer-group: lists-dlq-apiapp-consumer
    dlq-event-retry-interval-secs: 1
    dlq-max-event-retry-count: 2
    dlq-consumer-batch-size: 10



